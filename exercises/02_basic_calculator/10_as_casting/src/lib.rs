// TODO: このセクションで学んだ内容を踏まえ、
// `todo!()` を型変換後の正しい値に置き換えてください。

#[cfg(test)]
mod tests {

    #[test]
    fn u16_to_u32() {
        let v: u32 = 47;
        assert_eq!(47u16 as u32, v);
    }

    #[test]
    fn u8_to_i8() {
        // コンパイラは 255 が i8 に収まらないことを理解しているため、
        // 通常はハードエラーを出します。ここでは意図的にその安全装置を
        // 無効化して「悪い」変換を可能にします。
        // この警告が出るのは値がリテラルだからです。変数であれば
        // コンパイル時には検出できません。
        #[allow(overflowing_literals)]
        let x = { 255 as i8 };

        // 上とまったく同じ式をコピペすれば動きますが、
        // それでは演習の意味がありません。
        // 代わりに「`255` を `u8` にキャストしたときと等価になる」
        // 真の `i8` 値を使ってください。
        let y: i8 = -1;

        assert_eq!(x, y);
    }

    #[test]
    fn bool_to_u8() {
        let v: u8 = 1;
        assert_eq!(true as u8, v);
    }
}
